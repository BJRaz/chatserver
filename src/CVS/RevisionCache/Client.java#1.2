package tfud.client;

import java.io.*;
import java.net.*;
import java.util.*;

/**
 *
 *	@author BJR
 *
 *	Abstract Baseclass for all Clients - override handleConnection() in subclasses
 */
public abstract class Client extends Thread {

	protected Socket server;
	protected OutputStream out; 
	protected InputStream in;
	
	/**
	 *	Method Client
	 *	creates socket to server, and initializes output- and inputstreams
	 *
	 *	@throws 	IOException, UnknownHostExceotion
	 *	
	 *	@param hostaddress	the string holding the domainaddress or TCP/IP address of the server 
	 *	@param post			the port on the server to connect to as int
	 */
	public Client(String serveraddress, int port) throws IOException, UnknownHostException {
		
		server = new Socket(serveraddress, port);
		
		out = server.getOutputStream();
		in = server.getInputStream();
		
	}
	
	/**
	 *	Abstract Method handleConnection
	 *	Must be overriden i subclass - implemented as Template Method Pattern
	 */
	protected abstract void handleConnection();
	
	/**
	 *	final run method run when started - calls handleConnection()
	 */
	public final void run() {
		handleConnection();
	}
	
}